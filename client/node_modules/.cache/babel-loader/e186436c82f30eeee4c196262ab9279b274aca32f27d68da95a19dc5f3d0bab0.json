{"ast":null,"code":"'use strict';\n\nconst blacklist = [\n// # All\n'^npm-debug\\\\.log$',\n// Error log for npm\n'^\\\\..*\\\\.swp$',\n// Swap file for vim state\n\n// # macOS\n'^\\\\.DS_Store$',\n// Stores custom folder attributes\n'^\\\\.AppleDouble$',\n// Stores additional file resources\n'^\\\\.LSOverride$',\n// Contains the absolute path to the app to be used\n'^Icon\\\\r$',\n// Custom Finder icon: http://superuser.com/questions/298785/icon-file-on-os-x-desktop\n'^\\\\._.*',\n// Thumbnail\n'^\\\\.Spotlight-V100(?:$|\\\\/)',\n// Directory that might appear on external disk\n'\\\\.Trashes',\n// File that might appear on external disk\n'^__MACOSX$',\n// Resource fork\n\n// # Linux\n'~$',\n// Backup file\n\n// # Windows\n'^Thumbs\\\\.db$',\n// Image file cache\n'^ehthumbs\\\\.db$',\n// Folder config file\n'^Desktop\\\\.ini$',\n// Stores custom folder attributes\n'@eaDir$' // Synology Diskstation \"hidden\" folder where the server stores thumbnails\n];\n\nexports.re = () => {\n  throw new Error('`junk.re` was renamed to `junk.regex`');\n};\nexports.regex = new RegExp(blacklist.join('|'));\nexports.is = filename => exports.regex.test(filename);\nexports.not = filename => !exports.is(filename);\n\n// TODO: Remove this for the next major release\nexports.default = module.exports;","map":{"version":3,"names":["blacklist","exports","re","Error","regex","RegExp","join","is","filename","test","not","default","module"],"sources":["C:/Users/jadep/Desktop/diary2/diary2/client/node_modules/junk/index.js"],"sourcesContent":["'use strict';\n\nconst blacklist = [\n\t// # All\n\t'^npm-debug\\\\.log$', // Error log for npm\n\t'^\\\\..*\\\\.swp$', // Swap file for vim state\n\n\t// # macOS\n\t'^\\\\.DS_Store$', // Stores custom folder attributes\n\t'^\\\\.AppleDouble$', // Stores additional file resources\n\t'^\\\\.LSOverride$', // Contains the absolute path to the app to be used\n\t'^Icon\\\\r$', // Custom Finder icon: http://superuser.com/questions/298785/icon-file-on-os-x-desktop\n\t'^\\\\._.*', // Thumbnail\n\t'^\\\\.Spotlight-V100(?:$|\\\\/)', // Directory that might appear on external disk\n\t'\\\\.Trashes', // File that might appear on external disk\n\t'^__MACOSX$', // Resource fork\n\n\t// # Linux\n\t'~$', // Backup file\n\n\t// # Windows\n\t'^Thumbs\\\\.db$', // Image file cache\n\t'^ehthumbs\\\\.db$', // Folder config file\n\t'^Desktop\\\\.ini$', // Stores custom folder attributes\n\t'@eaDir$' // Synology Diskstation \"hidden\" folder where the server stores thumbnails\n];\n\nexports.re = () => {\n\tthrow new Error('`junk.re` was renamed to `junk.regex`');\n};\n\nexports.regex = new RegExp(blacklist.join('|'));\n\nexports.is = filename => exports.regex.test(filename);\n\nexports.not = filename => !exports.is(filename);\n\n// TODO: Remove this for the next major release\nexports.default = module.exports;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,SAAS,GAAG;AACjB;AACA,mBAAmB;AAAE;AACrB,eAAe;AAAE;;AAEjB;AACA,eAAe;AAAE;AACjB,kBAAkB;AAAE;AACpB,iBAAiB;AAAE;AACnB,WAAW;AAAE;AACb,SAAS;AAAE;AACX,6BAA6B;AAAE;AAC/B,YAAY;AAAE;AACd,YAAY;AAAE;;AAEd;AACA,IAAI;AAAE;;AAEN;AACA,eAAe;AAAE;AACjB,iBAAiB;AAAE;AACnB,iBAAiB;AAAE;AACnB,SAAS,CAAC;AAAA,CACV;;AAEDC,OAAO,CAACC,EAAE,GAAG,MAAM;EAClB,MAAM,IAAIC,KAAK,CAAC,uCAAuC,CAAC;AACzD,CAAC;AAEDF,OAAO,CAACG,KAAK,GAAG,IAAIC,MAAM,CAACL,SAAS,CAACM,IAAI,CAAC,GAAG,CAAC,CAAC;AAE/CL,OAAO,CAACM,EAAE,GAAGC,QAAQ,IAAIP,OAAO,CAACG,KAAK,CAACK,IAAI,CAACD,QAAQ,CAAC;AAErDP,OAAO,CAACS,GAAG,GAAGF,QAAQ,IAAI,CAACP,OAAO,CAACM,EAAE,CAACC,QAAQ,CAAC;;AAE/C;AACAP,OAAO,CAACU,OAAO,GAAGC,MAAM,CAACX,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}