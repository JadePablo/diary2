{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jadep\\\\Desktop\\\\diary2\\\\diary2\\\\client\\\\src\\\\components\\\\editJournal\\\\editJournalComponents\\\\ClearImageButton.jsx\";\nimport React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClearImageButton = _ref => {\n  let {\n    handleClearImage,\n    image\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sx: {\n        textAlign: 'center'\n      },\n      children: [image && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: \"Uploaded Image\",\n        style: {\n          height: '200px',\n          width: '100%',\n          objectFit: 'cover'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, this), !image && /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: handleImageUpload,\n          style: {\n            display: 'none'\n          },\n          id: \"upload-button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"upload-button\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            component: \"span\",\n            variant: \"contained\",\n            color: \"inherit\",\n            sx: {\n              bgcolor: '#f5f5f5',\n              // Lighter gray background color\n              color: 'black',\n              // Dark shade of gray for the text\n              borderRadius: '8px',\n              // Rounded corners\n              '&:hover': {\n                bgcolor: 'black',\n                // Black background color on hover\n                color: 'white' // White text color on hover\n              }\n            },\n            children: \"Upload Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), image && /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sx: {\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"inherit\",\n        onClick: handleClearImage,\n        sx: {\n          bgcolor: '#f5f5f5',\n          // Lighter gray background color\n          color: 'black',\n          // Dark shade of gray for the text\n          borderRadius: '8px',\n          // Rounded corners\n          marginTop: '1rem',\n          // Add spacing to the top\n          '&:hover': {\n            bgcolor: 'black',\n            // Black background color on hover\n            color: 'white' // White text color on hover\n          }\n        },\n        children: \"Clear Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = ClearImageButton;\nexport default ClearImageButton;\nvar _c;\n$RefreshReg$(_c, \"ClearImageButton\");","map":{"version":3,"names":["React","Grid","Button","jsxDEV","_jsxDEV","ClearImageButton","_ref","handleClearImage","image","container","justifyContent","alignItems","children","item","xs","sx","textAlign","src","alt","style","height","width","objectFit","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","type","accept","onChange","handleImageUpload","display","id","htmlFor","component","variant","color","bgcolor","borderRadius","onClick","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/jadep/Desktop/diary2/diary2/client/src/components/editJournal/editJournalComponents/ClearImageButton.jsx"],"sourcesContent":["import React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\n\r\nconst ClearImageButton = ({ handleClearImage, image }) => {\r\n  return (\r\n    <Grid container justifyContent=\"center\" alignItems=\"center\">\r\n      <Grid item xs={12} sx={{ textAlign: 'center' }}>\r\n        {image && (\r\n          <img\r\n            src={image}\r\n            alt=\"Uploaded Image\"\r\n            style={{ height: '200px', width: '100%', objectFit: 'cover' }}\r\n          />\r\n        )}\r\n        {!image && (\r\n          <React.Fragment>\r\n            <input\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              onChange={handleImageUpload}\r\n              style={{ display: 'none' }}\r\n              id=\"upload-button\"\r\n            />\r\n            <label htmlFor=\"upload-button\">\r\n              <Button\r\n                component=\"span\"\r\n                variant=\"contained\"\r\n                color=\"inherit\"\r\n                sx={{\r\n                  bgcolor: '#f5f5f5', // Lighter gray background color\r\n                  color: 'black', // Dark shade of gray for the text\r\n                  borderRadius: '8px', // Rounded corners\r\n                  '&:hover': {\r\n                    bgcolor: 'black', // Black background color on hover\r\n                    color: 'white', // White text color on hover\r\n                  },\r\n                }}\r\n              >\r\n                Upload Image\r\n              </Button>\r\n            </label>\r\n          </React.Fragment>\r\n        )}\r\n      </Grid>\r\n      {image && (\r\n        <Grid item xs={12} sx={{ textAlign: 'center' }}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"inherit\"\r\n            onClick={handleClearImage}\r\n            sx={{\r\n              bgcolor: '#f5f5f5', // Lighter gray background color\r\n              color: 'black', // Dark shade of gray for the text\r\n              borderRadius: '8px', // Rounded corners\r\n              marginTop: '1rem', // Add spacing to the top\r\n              '&:hover': {\r\n                bgcolor: 'black', // Black background color on hover\r\n                color: 'white', // White text color on hover\r\n              },\r\n            }}\r\n          >\r\n            Clear Image\r\n          </Button>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ClearImageButton;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,gBAAgB,GAAGC,IAAA,IAAiC;EAAA,IAAhC;IAAEC,gBAAgB;IAAEC;EAAM,CAAC,GAAAF,IAAA;EACnD,oBACEF,OAAA,CAACH,IAAI;IAACQ,SAAS;IAACC,cAAc,EAAC,QAAQ;IAACC,UAAU,EAAC,QAAQ;IAAAC,QAAA,gBACzDR,OAAA,CAACH,IAAI;MAACY,IAAI;MAACC,EAAE,EAAE,EAAG;MAACC,EAAE,EAAE;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAJ,QAAA,GAC5CJ,KAAK,iBACJJ,OAAA;QACEa,GAAG,EAAET,KAAM;QACXU,GAAG,EAAC,gBAAgB;QACpBC,KAAK,EAAE;UAAEC,MAAM,EAAE,OAAO;UAAEC,KAAK,EAAE,MAAM;UAAEC,SAAS,EAAE;QAAQ;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/D,CACF,EACA,CAAClB,KAAK,iBACLJ,OAAA,CAACJ,KAAK,CAAC2B,QAAQ;QAAAf,QAAA,gBACbR,OAAA;UACEwB,IAAI,EAAC,MAAM;UACXC,MAAM,EAAC,SAAS;UAChBC,QAAQ,EAAEC,iBAAkB;UAC5BZ,KAAK,EAAE;YAAEa,OAAO,EAAE;UAAO,CAAE;UAC3BC,EAAE,EAAC;QAAe;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB,CAAC,eACFtB,OAAA;UAAO8B,OAAO,EAAC,eAAe;UAAAtB,QAAA,eAC5BR,OAAA,CAACF,MAAM;YACLiC,SAAS,EAAC,MAAM;YAChBC,OAAO,EAAC,WAAW;YACnBC,KAAK,EAAC,SAAS;YACftB,EAAE,EAAE;cACFuB,OAAO,EAAE,SAAS;cAAE;cACpBD,KAAK,EAAE,OAAO;cAAE;cAChBE,YAAY,EAAE,KAAK;cAAE;cACrB,SAAS,EAAE;gBACTD,OAAO,EAAE,OAAO;gBAAE;gBAClBD,KAAK,EAAE,OAAO,CAAE;cAClB;YACF,CAAE;YAAAzB,QAAA,EACH;UAED;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACM,CACjB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,EACNlB,KAAK,iBACJJ,OAAA,CAACH,IAAI;MAACY,IAAI;MAACC,EAAE,EAAE,EAAG;MAACC,EAAE,EAAE;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAJ,QAAA,eAC7CR,OAAA,CAACF,MAAM;QACLkC,OAAO,EAAC,WAAW;QACnBC,KAAK,EAAC,SAAS;QACfG,OAAO,EAAEjC,gBAAiB;QAC1BQ,EAAE,EAAE;UACFuB,OAAO,EAAE,SAAS;UAAE;UACpBD,KAAK,EAAE,OAAO;UAAE;UAChBE,YAAY,EAAE,KAAK;UAAE;UACrBE,SAAS,EAAE,MAAM;UAAE;UACnB,SAAS,EAAE;YACTH,OAAO,EAAE,OAAO;YAAE;YAClBD,KAAK,EAAE,OAAO,CAAE;UAClB;QACF,CAAE;QAAAzB,QAAA,EACH;MAED;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACP;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEX,CAAC;AAACgB,EAAA,GAhEIrC,gBAAgB;AAkEtB,eAAeA,gBAAgB;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}