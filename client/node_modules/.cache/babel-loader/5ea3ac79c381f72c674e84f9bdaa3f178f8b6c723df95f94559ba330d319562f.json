{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jadep\\\\Desktop\\\\diary2\\\\diary2\\\\client\\\\src\\\\components\\\\homepage\\\\homepageComponents\\\\JournalCard.jsx\";\nimport React from 'react';\nimport Card from '@mui/material/Card';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardContent from '@mui/material/CardContent';\nimport CardActions from '@mui/material/CardActions';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function JournalCard(_ref) {\n  let {\n    entry,\n    currentDate,\n    handleViewEntry\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n      bgcolor: 'lightgrey',\n      // Set the background color to light grey\n      color: 'black' // Set the text color to black\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n      component: \"div\",\n      sx: {\n        // 16:9\n        pt: '56.25%',\n        backgroundImage: `url(data:image/png;base64,${entry.images[0]})`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        borderRadius: '8px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      sx: {\n        flexGrow: 1,\n        color: 'black' // Set the text color to black\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        variant: \"h5\",\n        component: \"h2\",\n        sx: {\n          fontWeight: 'bold',\n          fontSize: 20,\n          color: 'black'\n        },\n        children: [entry.entry_title, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        children: new Date(entry.date_created).toLocaleDateString('en-US', {\n          year: 'numeric',\n          month: 'long',\n          day: 'numeric'\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        children: currentDate < new Date(entry.open_date) ? `Available on: ${new Date(entry.open_date).toLocaleDateString('en-US', {\n          year: 'numeric',\n          month: 'long',\n          day: 'numeric'\n        })}` : 'Not available yet'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), currentDate >= new Date(entry.open_date) && /*#__PURE__*/_jsxDEV(CardActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        onClick: () => handleViewEntry(entry),\n        sx: {\n          bgcolor: '#f5f5f5',\n          // Lighter gray background color\n          color: 'black',\n          // Dark shade of gray for the text\n          borderRadius: '8px',\n          // Rounded corners\n          '&:hover': {\n            bgcolor: 'black',\n            // Black background color on hover\n            color: 'white' // White text color on hover\n          }\n        },\n        children: \"View\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = JournalCard;\nvar _c;\n$RefreshReg$(_c, \"JournalCard\");","map":{"version":3,"names":["React","Card","CardMedia","CardContent","CardActions","Typography","Button","jsxDEV","_jsxDEV","JournalCard","_ref","entry","currentDate","handleViewEntry","sx","height","display","flexDirection","bgcolor","color","children","component","pt","backgroundImage","images","backgroundSize","backgroundPosition","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","flexGrow","gutterBottom","variant","fontWeight","fontSize","entry_title","Date","date_created","toLocaleDateString","year","month","day","open_date","size","onClick","_c","$RefreshReg$"],"sources":["C:/Users/jadep/Desktop/diary2/diary2/client/src/components/homepage/homepageComponents/JournalCard.jsx"],"sourcesContent":["import React from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\n\r\nexport default function JournalCard({ entry, currentDate, handleViewEntry }) {\r\n  return (\r\n    <Card\r\n      sx={{\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        bgcolor: 'lightgrey', // Set the background color to light grey\r\n        color: 'black', // Set the text color to black\r\n      }}\r\n    >\r\n      <CardMedia\r\n        component=\"div\"\r\n        sx={{\r\n          // 16:9\r\n          pt: '56.25%',\r\n          backgroundImage: `url(data:image/png;base64,${entry.images[0]})`,\r\n          backgroundSize: 'cover',\r\n          backgroundPosition: 'center',\r\n          borderRadius: '8px',\r\n        }}\r\n      />\r\n      <CardContent\r\n        sx={{\r\n          flexGrow: 1,\r\n          color: 'black', // Set the text color to black\r\n        }}\r\n      >\r\n        <Typography gutterBottom variant=\"h5\" component=\"h2\" sx={{ fontWeight: 'bold', fontSize: 20, color: 'black' }}>\r\n          {entry.entry_title} {/* Use the title from the entry */}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"text.secondary\">\r\n          {new Date(entry.date_created).toLocaleDateString('en-US', {\r\n            year: 'numeric',\r\n            month: 'long',\r\n            day: 'numeric',\r\n          })}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"text.secondary\">\r\n          {currentDate < new Date(entry.open_date)\r\n            ? `Available on: ${new Date(entry.open_date).toLocaleDateString('en-US', {\r\n                year: 'numeric',\r\n                month: 'long',\r\n                day: 'numeric',\r\n              })}`\r\n            : 'Not available yet'}\r\n        </Typography>\r\n      </CardContent>\r\n      {currentDate >= new Date(entry.open_date) && (\r\n        <CardActions>\r\n          <Button\r\n            size=\"small\"\r\n            onClick={() => handleViewEntry(entry)}\r\n            sx={{\r\n              bgcolor: '#f5f5f5', // Lighter gray background color\r\n              color: 'black', // Dark shade of gray for the text\r\n              borderRadius: '8px', // Rounded corners\r\n              '&:hover': {\r\n                bgcolor: 'black', // Black background color on hover\r\n                color: 'white', // White text color on hover\r\n              },\r\n            }}\r\n          >\r\n            View\r\n          </Button>\r\n        </CardActions>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}