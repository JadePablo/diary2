{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jadep\\\\Desktop\\\\diary2\\\\diary2\\\\client\\\\src\\\\components\\\\TestComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { postNewEntry, updateOnlineStatus, getJournalEntries } from '../api.js'; // Update the path to match the location of your API file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TestComponent = () => {\n  _s();\n  useEffect(() => {\n    // Test the postNewEntry function\n    const testPostNewEntry = async () => {\n      try {\n        const entryData = {\n          email: 'example@example.com',\n          text_content: 'This is a test journal entry',\n          images: ['image1.jpg', 'image2.jpg'],\n          open_date: '2023-06-18',\n          entry_title: 'Test Entry'\n        };\n        const response = await postNewEntry(entryData);\n        console.log('Post New Entry Response:', response);\n      } catch (error) {\n        console.error('Post New Entry Error:', error.message);\n      }\n    };\n\n    // Test the updateOnlineStatus function\n    const testUpdateOnlineStatus = async () => {\n      try {\n        const email = 'example@example.com';\n        const response = await updateOnlineStatus(email);\n        console.log('Update Online Status Response:', response);\n      } catch (error) {\n        console.error('Update Online Status Error:', error.message);\n      }\n    };\n\n    // Test the getJournalEntries function\n    const testGetJournalEntries = async () => {\n      try {\n        const email = 'example@example.com';\n        const response = await getJournalEntries(email);\n        console.log('Get Journal Entries Response:', response);\n      } catch (error) {\n        console.error('Get Journal Entries Error:', error.message);\n      }\n    };\n\n    // Call the test functions\n    testPostNewEntry();\n    testUpdateOnlineStatus();\n    testGetJournalEntries();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"API Test Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please check the browser console for the API function test results.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(TestComponent, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = TestComponent;\nexport default TestComponent;\nvar _c;\n$RefreshReg$(_c, \"TestComponent\");","map":{"version":3,"names":["React","useEffect","postNewEntry","updateOnlineStatus","getJournalEntries","jsxDEV","_jsxDEV","TestComponent","_s","testPostNewEntry","entryData","email","text_content","images","open_date","entry_title","response","console","log","error","message","testUpdateOnlineStatus","testGetJournalEntries","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jadep/Desktop/diary2/diary2/client/src/components/TestComponent.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport {\r\n  postNewEntry,\r\n  updateOnlineStatus,\r\n  getJournalEntries,\r\n} from '../api.js'; // Update the path to match the location of your API file\r\n\r\nconst TestComponent = () => {\r\n  useEffect(() => {\r\n    // Test the postNewEntry function\r\n    const testPostNewEntry = async () => {\r\n      try {\r\n        const entryData = {\r\n          email: 'example@example.com',\r\n          text_content: 'This is a test journal entry',\r\n          images: ['image1.jpg', 'image2.jpg'],\r\n          open_date: '2023-06-18',\r\n          entry_title: 'Test Entry',\r\n        };\r\n        const response = await postNewEntry(entryData);\r\n        console.log('Post New Entry Response:', response);\r\n      } catch (error) {\r\n        console.error('Post New Entry Error:', error.message);\r\n      }\r\n    };\r\n\r\n    // Test the updateOnlineStatus function\r\n    const testUpdateOnlineStatus = async () => {\r\n      try {\r\n        const email = 'example@example.com';\r\n        const response = await updateOnlineStatus(email);\r\n        console.log('Update Online Status Response:', response);\r\n      } catch (error) {\r\n        console.error('Update Online Status Error:', error.message);\r\n      }\r\n    };\r\n\r\n    // Test the getJournalEntries function\r\n    const testGetJournalEntries = async () => {\r\n      try {\r\n        const email = 'example@example.com';\r\n        const response = await getJournalEntries(email);\r\n        console.log('Get Journal Entries Response:', response);\r\n      } catch (error) {\r\n        console.error('Get Journal Entries Error:', error.message);\r\n      }\r\n    };\r\n\r\n    // Call the test functions\r\n    testPostNewEntry();\r\n    testUpdateOnlineStatus();\r\n    testGetJournalEntries();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>API Test Component</h1>\r\n      <p>Please check the browser console for the API function test results.</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TestComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SACEC,YAAY,EACZC,kBAAkB,EAClBC,iBAAiB,QACZ,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1BP,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,SAAS,GAAG;UAChBC,KAAK,EAAE,qBAAqB;UAC5BC,YAAY,EAAE,8BAA8B;UAC5CC,MAAM,EAAE,CAAC,YAAY,EAAE,YAAY,CAAC;UACpCC,SAAS,EAAE,YAAY;UACvBC,WAAW,EAAE;QACf,CAAC;QACD,MAAMC,QAAQ,GAAG,MAAMd,YAAY,CAACQ,SAAS,CAAC;QAC9CO,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,QAAQ,CAAC;MACnD,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACC,OAAO,CAAC;MACvD;IACF,CAAC;;IAED;IACA,MAAMC,sBAAsB,GAAG,MAAAA,CAAA,KAAY;MACzC,IAAI;QACF,MAAMV,KAAK,GAAG,qBAAqB;QACnC,MAAMK,QAAQ,GAAG,MAAMb,kBAAkB,CAACQ,KAAK,CAAC;QAChDM,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEF,QAAQ,CAAC;MACzD,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAACC,OAAO,CAAC;MAC7D;IACF,CAAC;;IAED;IACA,MAAME,qBAAqB,GAAG,MAAAA,CAAA,KAAY;MACxC,IAAI;QACF,MAAMX,KAAK,GAAG,qBAAqB;QACnC,MAAMK,QAAQ,GAAG,MAAMZ,iBAAiB,CAACO,KAAK,CAAC;QAC/CM,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEF,QAAQ,CAAC;MACxD,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAACC,OAAO,CAAC;MAC5D;IACF,CAAC;;IAED;IACAX,gBAAgB,CAAC,CAAC;IAClBY,sBAAsB,CAAC,CAAC;IACxBC,qBAAqB,CAAC,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEhB,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BrB,OAAA;MAAAiB,QAAA,EAAG;IAAmE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvE,CAAC;AAEV,CAAC;AAACnB,EAAA,CArDID,aAAa;AAAAqB,EAAA,GAAbrB,aAAa;AAuDnB,eAAeA,aAAa;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}