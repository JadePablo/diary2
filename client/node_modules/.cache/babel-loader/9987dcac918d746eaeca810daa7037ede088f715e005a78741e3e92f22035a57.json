{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jadep\\\\Desktop\\\\diary2\\\\diary2\\\\client\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { GoogleOAuthProvider } from '@react-oauth/google';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { disableReactDevTools } from '@fvilers/disable-react-devtools';\nimport loginReducer from './loginReducer.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nif (process.env.NODE_ENV === 'production') {\n  disableReactDevTools();\n}\nconst store = configureStore({\n  reducer: {\n    login: loginReducer\n  },\n  devTools: false\n});\nconst clientId = process.env.REACT_APP_GOOGLE_CLIENT_ID;\nconsole.log(clientId);\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n    clientId: clientId,\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Provider, {\n        store: store,\n        children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 31,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","GoogleOAuthProvider","configureStore","Provider","BrowserRouter","disableReactDevTools","loginReducer","jsxDEV","_jsxDEV","process","env","NODE_ENV","store","reducer","login","devTools","clientId","REACT_APP_GOOGLE_CLIENT_ID","console","log","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/jadep/Desktop/diary2/diary2/client/src/index.js"],"sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport { GoogleOAuthProvider } from '@react-oauth/google';\r\nimport {configureStore} from '@reduxjs/toolkit';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport {disableReactDevTools} from '@fvilers/disable-react-devtools'\r\n\r\nimport loginReducer from './loginReducer.js';\r\n\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  disableReactDevTools()\r\n}\r\nconst store = configureStore({\r\n  reducer: {\r\n    login: loginReducer\r\n  },\r\n  devTools: false\r\n})\r\n\r\nconst clientId = process.env.REACT_APP_GOOGLE_CLIENT_ID;\r\nconsole.log(clientId)\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <GoogleOAuthProvider clientId={clientId}>\r\n      <BrowserRouter>\r\n        <Provider store={store}>\r\n          <App />\r\n        </Provider>   \r\n      </BrowserRouter>\r\n\r\n    </GoogleOAuthProvider>\r\n\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAE/C,SAASC,mBAAmB,QAAQ,qBAAqB;AACzD,SAAQC,cAAc,QAAO,kBAAkB;AAC/C,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,aAAa,QAAQ,kBAAkB;AAChD,SAAQC,oBAAoB,QAAO,iCAAiC;AAEpE,OAAOC,YAAY,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG7C,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EACzCN,oBAAoB,CAAC,CAAC;AACxB;AACA,MAAMO,KAAK,GAAGV,cAAc,CAAC;EAC3BW,OAAO,EAAE;IACPC,KAAK,EAAER;EACT,CAAC;EACDS,QAAQ,EAAE;AACZ,CAAC,CAAC;AAEF,MAAMC,QAAQ,GAAGP,OAAO,CAACC,GAAG,CAACO,0BAA0B;AACvDC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;AAErB,MAAMI,IAAI,GAAGtB,QAAQ,CAACuB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACThB,OAAA,CAACX,KAAK,CAAC4B,UAAU;EAAAC,QAAA,eACflB,OAAA,CAACP,mBAAmB;IAACe,QAAQ,EAAEA,QAAS;IAAAU,QAAA,eACtClB,OAAA,CAACJ,aAAa;MAAAsB,QAAA,eACZlB,OAAA,CAACL,QAAQ;QAACS,KAAK,EAAEA,KAAM;QAAAc,QAAA,eACrBlB,OAAA,CAACT,GAAG;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEG;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAEN,CACpB,CAAC;;AAED;AACA;AACA;AACA9B,eAAe,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}