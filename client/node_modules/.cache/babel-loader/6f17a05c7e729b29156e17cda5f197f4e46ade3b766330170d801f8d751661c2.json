{"ast":null,"code":"var _s = $RefreshSig$();\n//import modules from dependencies\nimport * as React from 'react';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Grid from '@mui/material/Grid';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\n//modules to load entries from api\nimport { getJournalEntries } from '../../api.js';\n\n//sub components\nimport HomepageHeader from './homepageComponents/HomepageHeader.jsx';\nimport JournalEntryPage from './homepageComponents/JournalEntryPage.jsx';\nimport JournalCard from './homepageComponents/JournalCard.jsx';\n\n// function useHandleVisitor(username) {\n//   const navigate = useNavigate();\n//   const storedName = localStorage.getItem('name');\n//   const name = useSelector((state) => state.login.name) || storedName;\n\n//   React.useEffect(() => {\n//     if (name !== username || name == null) {\n//       navigate('/');\n//     }\n//   }, [name, username, navigate]);\n\n//   // Store the name in local storage whenever it changes\n//   React.useEffect(() => {\n//     localStorage.setItem('name', name);\n//   }, [name]);\n// }\n\nfunction useHandleVisitor(username) {\n  _s();\n  const navigate = useNavigate();\n  const storedName = localStorage.getItem('name');\n  React.useEffect(() => {\n    if (storedName !== username || storedName == null) {\n      navigate('/');\n    }\n  }, [storedName, username, navigate]);\n\n  // Store the name in local storage whenever it changes\n  React.useEffect(() => {\n    localStorage.setItem('name', username);\n  }, [username]);\n}\n\n// export default function Homepage() {\n//   const { username } = useParams();\n//   useHandleVisitor(username);\n\n//   const navigate = useNavigate();\n//   const handleCreateClick = () => {\n//     navigate(`/${username}/create`);\n//   };\n\n//   const email = useSelector((state) => state.login.email);\n//   const [journalEntries, setJournalEntries] = React.useState([]);\n//   const [selectedEntry, setSelectedEntry] = React.useState(null);\n\n//   const handleViewEntry = (entry) => {\n//     setSelectedEntry(entry);\n//   };\n\n//   const handleCloseEntry = () => {\n//     setSelectedEntry(null);\n//   };\n\n//   React.useEffect(() => {\n//     const fetchJournalEntries = async () => {\n//       try {\n//         const entries = await getJournalEntries(email);\n//         setJournalEntries(entries.reverse());\n//       } catch (error) {\n//         console.error('Failed to retrieve journal entries:', error.message);\n//       }\n//     };\n\n//     fetchJournalEntries();\n//   }, [email]);\n\n//   const currentDate = new Date();\n\n//   return (\n//     <ThemeProvider theme={createTheme()}>\n//       <CssBaseline />\n\n//       <main>\n//         {/* Hero unit */}\n//         <HomepageHeader handleCreateClick={handleCreateClick}/>\n//         <Container sx={{ py: 8 }} maxWidth=\"md\">\n//           {/* End hero unit */}\n//           <Grid container spacing={4}>\n//             {journalEntries.map((entry) => (\n//               <Grid item key={entry.id} xs={12} sm={6} md={4}>\n//                 <JournalCard\n//                   entry={entry}\n//                   currentDate={currentDate}\n//                   handleViewEntry={handleViewEntry}\n//                 />\n//               </Grid>\n//             ))}\n//           </Grid>\n//         </Container>\n//       </main>\n\n//       {selectedEntry && (\n//         <JournalEntryPage entry={selectedEntry} onClose={handleCloseEntry} />\n//         )}\n//     </ThemeProvider>\n//   );\n// }\n_s(useHandleVisitor, \"khgsfvlVLpWikUdAayORL272oMo=\", false, function () {\n  return [useNavigate];\n});","map":{"version":3,"names":["React","CssBaseline","Grid","Container","createTheme","ThemeProvider","useParams","useNavigate","useSelector","getJournalEntries","HomepageHeader","JournalEntryPage","JournalCard","useHandleVisitor","username","_s","navigate","storedName","localStorage","getItem","useEffect","setItem"],"sources":["C:/Users/jadep/Desktop/diary2/diary2/client/src/components/homepage/Homepage.jsx"],"sourcesContent":["//import modules from dependencies\r\nimport * as React from 'react';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Grid from '@mui/material/Grid';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\n//modules to load entries from api\r\nimport { getJournalEntries } from '../../api.js'; \r\n\r\n//sub components\r\nimport HomepageHeader from './homepageComponents/HomepageHeader.jsx';\r\nimport JournalEntryPage from './homepageComponents/JournalEntryPage.jsx';\r\nimport JournalCard from './homepageComponents/JournalCard.jsx';\r\n\r\n// function useHandleVisitor(username) {\r\n//   const navigate = useNavigate();\r\n//   const storedName = localStorage.getItem('name');\r\n//   const name = useSelector((state) => state.login.name) || storedName;\r\n\r\n//   React.useEffect(() => {\r\n//     if (name !== username || name == null) {\r\n//       navigate('/');\r\n//     }\r\n//   }, [name, username, navigate]);\r\n\r\n//   // Store the name in local storage whenever it changes\r\n//   React.useEffect(() => {\r\n//     localStorage.setItem('name', name);\r\n//   }, [name]);\r\n// }\r\n\r\nfunction useHandleVisitor(username) {\r\n  const navigate = useNavigate();\r\n  const storedName = localStorage.getItem('name');\r\n\r\n  React.useEffect(() => {\r\n    if (storedName !== username || storedName == null) {\r\n      navigate('/');\r\n    }\r\n  }, [storedName, username, navigate]);\r\n\r\n  // Store the name in local storage whenever it changes\r\n  React.useEffect(() => {\r\n    localStorage.setItem('name', username);\r\n  }, [username]);\r\n}\r\n\r\n\r\n// export default function Homepage() {\r\n//   const { username } = useParams();\r\n//   useHandleVisitor(username);\r\n\r\n//   const navigate = useNavigate();\r\n//   const handleCreateClick = () => {\r\n//     navigate(`/${username}/create`);\r\n//   };\r\n\r\n//   const email = useSelector((state) => state.login.email);\r\n//   const [journalEntries, setJournalEntries] = React.useState([]);\r\n//   const [selectedEntry, setSelectedEntry] = React.useState(null);\r\n\r\n//   const handleViewEntry = (entry) => {\r\n//     setSelectedEntry(entry);\r\n//   };\r\n\r\n//   const handleCloseEntry = () => {\r\n//     setSelectedEntry(null);\r\n//   };\r\n\r\n//   React.useEffect(() => {\r\n//     const fetchJournalEntries = async () => {\r\n//       try {\r\n//         const entries = await getJournalEntries(email);\r\n//         setJournalEntries(entries.reverse());\r\n//       } catch (error) {\r\n//         console.error('Failed to retrieve journal entries:', error.message);\r\n//       }\r\n//     };\r\n\r\n//     fetchJournalEntries();\r\n//   }, [email]);\r\n\r\n//   const currentDate = new Date();\r\n\r\n//   return (\r\n//     <ThemeProvider theme={createTheme()}>\r\n//       <CssBaseline />\r\n\r\n//       <main>\r\n//         {/* Hero unit */}\r\n//         <HomepageHeader handleCreateClick={handleCreateClick}/>\r\n//         <Container sx={{ py: 8 }} maxWidth=\"md\">\r\n//           {/* End hero unit */}\r\n//           <Grid container spacing={4}>\r\n//             {journalEntries.map((entry) => (\r\n//               <Grid item key={entry.id} xs={12} sm={6} md={4}>\r\n//                 <JournalCard\r\n//                   entry={entry}\r\n//                   currentDate={currentDate}\r\n//                   handleViewEntry={handleViewEntry}\r\n//                 />\r\n//               </Grid>\r\n//             ))}\r\n//           </Grid>\r\n//         </Container>\r\n//       </main>\r\n\r\n//       {selectedEntry && (\r\n//         <JournalEntryPage entry={selectedEntry} onClose={handleCloseEntry} />\r\n//         )}\r\n//     </ThemeProvider>\r\n//   );\r\n// }\r\n\r\n"],"mappings":";AAAA;AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,WAAW,EAAEC,aAAa,QAAQ,sBAAsB;AACjE,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,SAASC,WAAW,QAAQ,aAAa;;AAEzC;AACA,SAASC,iBAAiB,QAAQ,cAAc;;AAEhD;AACA,OAAOC,cAAc,MAAM,yCAAyC;AACpE,OAAOC,gBAAgB,MAAM,2CAA2C;AACxE,OAAOC,WAAW,MAAM,sCAAsC;;AAE9D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,SAASC,gBAAgBA,CAACC,QAAQ,EAAE;EAAAC,EAAA;EAClC,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EAE/CnB,KAAK,CAACoB,SAAS,CAAC,MAAM;IACpB,IAAIH,UAAU,KAAKH,QAAQ,IAAIG,UAAU,IAAI,IAAI,EAAE;MACjDD,QAAQ,CAAC,GAAG,CAAC;IACf;EACF,CAAC,EAAE,CAACC,UAAU,EAAEH,QAAQ,EAAEE,QAAQ,CAAC,CAAC;;EAEpC;EACAhB,KAAK,CAACoB,SAAS,CAAC,MAAM;IACpBF,YAAY,CAACG,OAAO,CAAC,MAAM,EAAEP,QAAQ,CAAC;EACxC,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;AAChB;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAAC,EAAA,CAjFSF,gBAAgB;EAAA,QACNN,WAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}